%start SourceFile;

%%

Type : TypeName
      | TypeLit
      | T_LPAREN Type T_RPAREN
      ;

TypeName : T_ID
         | QualifiedIdent
         ;

TypeLit : ArrayType
        | StruckType
        | PointerType
        | FunctionType
        | InterfaceType
        | SliceType
        | MapType
        | ChanelType
        ;

ArrayType       : T_LBRACK ArrayLenght T_RBRACK ElementType   {printf("ArrayType");}
                ;

ArrayLenght : Expression
            ;

ElementType : Type
            ;

SliceType : T_LBRACK T_RBRACK ElementType
          ;

StruckType : T_STRUCT T_LCURLYBR FileDeclLoop T_RCURLYBR
           ;

FileDeclLoop : FileDecl T_SEMI FileDeclLoop
             /*| FileDecl FileDeclLoop*/
             |
             ;

FileDecl : IdentifierList Type Tag
         | IdentifierList Type
         | EmbeddedField Tag
         | EmbeddedField
         ;

EmbeddedField : TypeName 
              | T_MULTOP TypeName
              ;
Tag : T_SCONST 
    ;

PointerType : T_MULTOP BaseType
        ;

BaseType : Type
        ;

FunctionType : T_FUNC Signature
        ;

Signature : Parameters
        | Parameters Result
        ;

Result : Parameters
       | Type
       ;

Parameters : T_LPAREN ParameterLists T_RPAREN
          ;

ParameterLists : ParameterList
              | ParameterList T_COMMA
              |
              ;

ParameterList : ParameterDecl
             | ParameterDecl T_COMMA ParameterList
             ;

ParameterDecl : IdentifierList T_DOTDOTDOT Type
              | IdentifierList Type
              | T_DOTDOTDOT Type
              | Type
              ;

InterfaceType : T_INTERFACE T_LCURLYBR InterfaceTypeLoop T_RCURLYBR
              ;

InterfaceTypeLoop : MethodSpec T_SEMI InterfaceTypeLoop
                  | InterfaceTypeName T_SEMI InterfaceTypeLoop
/*                  | MethodSpec InterfaceTypeLoop
                  | InterfaceTypeName InterfaceTypeLoop*/
                  |
                  ;

MethodSpec : MethodName Signature
           ;

MethodName : T_ID 
           ;

InterfaceTypeName : TypeName
                  ;

MapType : T_MAP T_LBRACK KeyType T_RBRACK ElementType
        ;

KeyType : Type 
        ;

ChanelType : T_CHAN ElementType 
           | T_CHAN T_SENDOP ElementType
           | T_SENDOP T_CHAN ElementType
           ;

Block : T_LCURLYBR StatmentList T_RCURLYBR
        ;

StatmentList : Statment T_SEMI StatmentList
/*             | Statment StatmentList*/
             |
             ;

Declaration : ConstDecl
            | TypeDecl
            | VarDecl
            ;

TopLevelDecl : Declaration
             | FunctionDecl
             | MethodDecl
             ;

ConstDecl : T_CONST ConstSpec
          | T_CONST T_LPAREN ConstDeclLoop T_RPAREN
          ;

ConstDeclLoop : ConstSpec T_SEMI ConstDeclLoop
/*              | ConstSpec ConstDeclLoop*/
              | 
              ;

ConstSpec       : IdentifierList 
                | IdentifierList Type T_ASSIGNOP ExpressionList
                | IdentifierList T_ASSIGNOP ExpressionList
                ;

IdentifierList : T_ID 
                | T_ID T_COMMA IdentifierList
                ;

ExpressionList  : Expression
                | Expression T_COMMA ExpressionList
                ;

TypeDecl        : T_TYPE TypeSpec
                | T_TYPE T_LPAREN TypeDeclLoop T_RPAREN
                ;

TypeDeclLoop    : TypeSpec T_SEMI TypeDeclLoop
/*                | TypeDecl TypeDeclLoop*/
                |
                ;

TypeSpec        : AliasDecl 
                | TypeDef
                ;

AliasDecl       : T_ID T_ASSIGNOP Type
                ;

TypeDef : T_ID Type 
        ;

VarDecl : T_VAR VarSpec
        | T_VAR T_LPAREN VarDeclLoop T_RPAREN
        ;

VarDeclLoop     : VarSpec T_SEMI VarDeclLoop
/*                | VarSpec VarDeclLoop*/
                |
                ;

VarSpec : IdentifierList Type T_ASSIGNOP ExpressionList
        | IdentifierList Type
        | IdentifierList T_ASSIGNOP ExpressionList
        ;

ShortVarDecl    : IdentifierList T_ASSIGN ExpressionList
                ;

FunctionDecl    : T_FUNC FunctionName Signature FunctionBody
                | T_FUNC FunctionName Signature
                ;

FunctionName    : T_ID 
                ;

FunctionBody    : Block
                ;

MethodDecl      : T_FUNC Receiver MethodName Signature FunctionBody
                | T_FUNC Receiver MethodName Signature
                ;

Receiver        : Parameters
                ;

Operand         : Literal
                | OperandName
                | T_LPAREN Expression T_RPAREN
                ;

Literal : BasicLit
        | CompositeLit
        | FunctionLit
        ;

BasicLit        : T_ICONST
                | T_RCONST
                | T_IMCONST
                | T_SCONST
                | T_CCONST
                ;

OperandName     : T_ID
                | QualifiedIdent
                ;

QualifiedIdent  : PackageName T_DOT T_ID
                ;

CompositeLit    : LiteralType LiteralValue
                ;

LiteralType     : StruckType
                | ArrayType
                | T_LBRACK T_DOTDOTDOT T_RBRACK ElementType
                | SliceType
                | MapType
                | TypeName
                ;

LiteralValue    : T_LCURLYBR ElementList T_COMMA T_RCURLYBR
                | T_LCURLYBR ElementList T_RCURLYBR
                | T_LCURLYBR T_RCURLYBR
                ;

ElementList     : KeyedElement ElementListLoop
                ;

ElementListLoop : T_COMMA KeyedElement ElementListLoop
                | 
                ;

KeyedElement    : Key T_COLON Element 
                | Element
                ;

Key     : /*FieldName
        |*/ Expression
        | LiteralValue
        ;

/*FieldName       : T_ID
                ;*/

Element         : Expression
                | LiteralValue
                ;

FunctionLit     : T_FUNC Signature FunctionBody
                ;

PrimaryExpr     : Operand 
                | Convertion
                | MethodExpr
                | PrimaryExpr Selector
                | PrimaryExpr Index
                | PrimaryExpr Slice
                | PrimaryExpr TypeAssertion
                | PrimaryExpr Arguments
                ;

Selector        : T_DOT T_ID
                ;
Index   : T_LBRACK Expression T_RBRACK
        ;

Slice   : T_RBRACK Expression T_COLON Expression T_RBRACK
        | T_RBRACK T_COLON Expression T_RBRACK
        | T_RBRACK Expression T_COLON T_RBRACK
        | T_RBRACK T_COLON T_RBRACK
        | T_RBRACK Expression T_COLON Expression T_COLON Expression T_RBRACK
        | T_RBRACK T_COLON Expression T_COLON Expression T_RBRACK
        ;

TypeAssertion   : T_DOT T_LPAREN Type T_RPAREN
                ;

Arguments       : T_LPAREN ExpressionList T_DOTDOTDOT T_COMMA T_RPAREN
                | T_LPAREN Type T_COMMA ExpressionList T_DOTDOTDOT T_COMMA T_RPAREN
                | T_LPAREN Type T_DOTDOTDOT T_COMMA T_RPAREN
                | T_LPAREN ExpressionList T_COMMA T_RPAREN
                | T_LPAREN Type T_COMMA ExpressionList T_COMMA T_RPAREN
                | T_LPAREN Type T_COMMA T_RPAREN
                | T_LPAREN ExpressionList T_DOTDOTDOT T_RPAREN
                | T_LPAREN Type T_COMMA ExpressionList T_DOTDOTDOT T_RPAREN
                | T_LPAREN Type T_DOTDOTDOT T_RPAREN
                | T_LPAREN ExpressionList T_RPAREN
                | T_LPAREN Type T_COMMA ExpressionList T_RPAREN
                | T_LPAREN Type T_RPAREN
                ;

MethodExpr      : ReceiverType T_DOT MethodName
                ;

ReceiverType    : Type
                ;

Expression      : UnaryExpr
                | Expression binary_op Expression
                ;

UnaryExpr       : PrimaryExpr
                | unary_op UnaryExpr
                ;

binary_op       : T_OROP
                | T_ANDOP
                | rel_op
                | add_op
                | mul_op
                ;

rel_op  : T_LESS
        | T_GREAT
        | T_LESSOREQU
        | T_GREATOREQU
        | T_NOTEQU
        | T_EQU
        ;

add_op  : T_ADDOP
        | T_SUBTROP
        | T_BITOR
        | T_XOR
        ;

mul_op  : T_MULTOP
        | T_DIVOP
        | T_MOD
        | T_LSHIFT
        | T_RSHIFT
        | T_BITANDOP
        | T_BITCLEAR
        ;

unary_op        : T_ADDOP
                | T_SUBTROP
                | T_NOTOP
                | T_XOR
                | T_MULTOP
                | T_BITANDOP
                | T_SENDOP
                ;

Convertion      : Type T_LPAREN Expression T_COMMA T_RPAREN
                | Type T_LPAREN Expression T_RPAREN
                ;

Statment        : Declaration
                | LabeledStmt
                | SimpleStmt
                | GoStmt
                | ReturnStmt
                | BreakStmt
                | ContinueStmt
                | GotoStmt
                | FallthoughStmt
                | Block 
                | IfStmt
                | SwitchStmt
                | SelectStmt
                | ForStmt
                | DeferStmt
                ;

SimpleStmt      : EmptyStmt
                | ExpressionStmt
                | SendStmt
                | IncDecStmt
                | Assignment
                | ShortVarDecl
                ;

EmptyStmt       :
                ;

LabeledStmt     : Label T_COLON Statment
                ;

Label   : T_ID
        ;

ExpressionStmt  : Expression
                ;

SendStmt        : Channel T_SENDOP Expression
                ;

Channel         : Expression
                ;

IncDecStmt      : Expression T_DOUBLEPLUSOP
                | Expression T_DOUBLEMINUSOP
                ;

Assignment      : ExpressionList assign_op ExpressionList
                ;

assign_op       : add_op T_ASSIGNOP
                | mul_op T_ASSIGNOP
                ;

IfStmt  : T_IF SimpleStmt T_SEMI Expression Block T_ELSE IfStmt 
        | T_IF SimpleStmt T_SEMI Expression Block T_ELSE Block
        | T_IF SimpleStmt T_SEMI Expression Block       
/*        | T_IF SimpleStmt Expression Block T_ELSE IfStmt 
        | T_IF SimpleStmt Expression Block T_ELSE Block 
        | T_IF SimpleStmt Expression Block*/
        | T_IF Expression Block T_ELSE IfStmt 
        | T_IF Expression Block T_ELSE Block
        | T_IF Expression Block 
        ;

SwitchStmt      : ExprSwitchStmt
                | TypeSwitchStmt
                ;

ExprSwitchStmt  : T_SWITCH SimpleStmt T_SEMI Expression T_LCURLYBR ExprCaseClauseLoop T_RCURLYBR
                | T_SWITCH SimpleStmt T_SEMI T_LCURLYBR ExprCaseClauseLoop T_RCURLYBR
/*                | T_SWITCH SimpleStmt Expression T_LCURLYBR ExprCaseClauseLoop T_RCURLYBR
                | T_SWITCH SimpleStmt T_LCURLYBR ExprCaseClauseLoop T_RCURLYBR*/
                | T_SWITCH Expression T_LCURLYBR ExprCaseClauseLoop T_RCURLYBR
                | T_SWITCH T_LCURLYBR ExprCaseClauseLoop T_RCURLYBR
                ;

ExprCaseClauseLoop      : ExprCaseClause ExprCaseClauseLoop
                        |
                        ;

ExprCaseClause  : ExprSwitchCase T_COLON StatmentList
                ;

ExprSwitchCase  : T_CASE ExpressionList
                | T_CASE T_DEFAULT
                ;

TypeSwitchStmt  : T_SWITCH SimpleStmt T_SEMI TypeSwitchGuard T_LCURLYBR TypeCaseClauseLoop T_RCURLYBR
/*                | T_SWITCH SimpleStmt TypeSwitchGuard T_LCURLYBR TypeCaseClauseLoop T_RCURLYBR*/
                | T_SWITCH TypeSwitchGuard T_LCURLYBR TypeCaseClauseLoop T_RCURLYBR
                ;

TypeCaseClauseLoop      : TypeCaseClause TypeCaseClauseLoop
                        |
                        ;

TypeSwitchGuard         : T_ID T_ASSIGN PrimaryExpr T_DOT T_LPAREN T_TYPE T_RPAREN
                        | PrimaryExpr T_DOT T_LPAREN T_TYPE T_RPAREN
                        ;

TypeCaseClause  : TypeSwitchCase T_COLON StatmentList
                ;

TypeSwitchCase  : T_CASE TypeList
                | T_CASE T_DEFAULT
                ;

TypeList        : Type T_COMMA TypeList
                | Type
                ;

ForStmt         : T_FOR Condition Block
                | T_FOR ForClause Block
                | T_FOR RangeClause Block
                | T_FOR Block
                ;

Condition       : Expression
                ;

ForClause       : InitStmt T_SEMI Condition T_SEMI PostStmt 
                /*| InitStmt T_SEMI Condition T_SEMI*/
                | InitStmt T_SEMI T_SEMI PostStmt
                /*| InitStmt T_SEMI T_SEMI
                | T_SEMI Condition T_SEMI PostStmt
                | T_SEMI Condition T_SEMI
                | T_SEMI T_SEMI PostStmt
                | T_SEMI T_SEMI*/
                ;

InitStmt        : SimpleStmt
                ;

PostStmt        : SimpleStmt
                ;

RangeClause     : ExpressionList T_ASSIGNOP T_RANGE Expression
                | IdentifierList T_ASSIGN T_RANGE Expression
                | T_RANGE Expression
                ;

GoStmt  : T_GO Expression
        ;

SelectStmt      : T_SELECT T_LCURLYBR CommClauseLoop T_RCURLYBR
                ;

CommClauseLoop  : CommClause CommClauseLoop
                |
                ;

CommClause      : CommCase T_COLON StatmentList
                ;

CommCase        : T_CASE SendStmt
                | T_CASE RecvStmt
                | T_CASE T_DEFAULT
                ; 

RecvStmt        : ExpressionList T_ASSIGNOP RecvExpr
                | IdentifierList T_ASSIGN RecvExpr
                | RecvExpr
                ;

RecvExpr        : Expression
                ;

ReturnStmt      : T_RETURN ExpressionList
                | T_RETURN
                ;

BreakStmt       : T_BREAK Label
                | T_BREAK
                ;

ContinueStmt    : T_CONTINUE Label
                | T_CONTINUE
                ;

GotoStmt        : T_GOTO Label
                | T_GOTO
                ;

FallthoughStmt  : T_FALLTHROUGH
                ;

DeferStmt       : T_DEFER Expression
                ;

SourceFile      : PackageClause T_SEMI ImportDeclLoop TopLevelDeclLoop T_EOF
/*                | PackageClause ImportDeclLoop TopLevelDeclLoop*/
                ;

ImportDeclLoop  : ImportDecl T_SEMI ImportDeclLoop
/*                | ImportDecl ImportDeclLoop*/
                |
                ;

TopLevelDeclLoop        : TopLevelDecl T_SEMI TopLevelDeclLoop
/*                        | TopLevelDecl TopLevelDeclLoop*/
                        | 
                        ;

PackageClause   : T_PACKAGE PackageName
                ;

PackageName     : T_ID
                ;

ImportDecl      : T_IMPORT ImportSpec
                | T_IMPORT T_LPAREN ImportSpecLoop T_RPAREN
                ;
ImportSpecLoop  : ImportSpec T_SEMI ImportSpecLoop
/*                | ImportSpec ImportSpecLoop*/
                |
                ;

ImportSpec      : T_DOT ImportPath
                | PackageName ImportPath
                | ImportPath
                ;

ImportPath      : T_SCONST
                ;

